<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lc.project.mapper.RecentChatMapper">

    <resultMap id="BaseResultMap" type="com.lc.project.model.entity.RecentChat">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="userId" column="userId" jdbcType="VARCHAR"/>
            <result property="acceptUserId" column="acceptUserId" jdbcType="VARCHAR"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,userId,acceptUserId,
        createTime,updateTime,isDelete
    </sql>


    <resultMap id="GetChatFriend" type="com.lc.project.model.entity.RecentChat">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="userId" jdbcType="VARCHAR"/>
        <result property="acceptUserId" column="acceptUserId" jdbcType="VARCHAR"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
        <association property="recentFriends"   javaType="com.lc.project.model.entity.Users" >
            <id property="id" column="acceptUserId" jdbcType="VARCHAR"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="faceImage" column="face_image" jdbcType="VARCHAR"/>
            <result property="signature" column="signature" jdbcType="VARCHAR"/>
            <result property="sex" column="sex" jdbcType="VARCHAR"/>
            <result property="likeType" column="likeType" jdbcType="VARCHAR"/>
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
            <result property="userRole" column="userRole" jdbcType="VARCHAR"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
        </association>
    </resultMap>
    <select id="getRecentAndFriends" resultMap="GetChatFriend">
        select r.*, u.* from recent_chat r
            left join users u on r.acceptUserId = u.id
                   where r.userId = #{currentUserId} and r.isDelete = 0 order by r.createTime desc
    </select>

    <resultMap id="GetChatFriend2" type="com.lc.project.model.entity.RecentChat">
        <association property="recentFriends"  javaType="com.lc.project.model.entity.Users" >
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="faceImage" column="face_image" jdbcType="VARCHAR"/>
            <result property="signature" column="signature" jdbcType="VARCHAR"/>
            <result property="sex" column="sex" jdbcType="VARCHAR"/>
            <result property="likeType" column="likeType" jdbcType="VARCHAR"/>
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
            <result property="userRole" column="userRole" jdbcType="VARCHAR"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
        </association>
    </resultMap>
    <select id="getFriends" resultMap="GetChatFriend2">
        select  u.* from recent_chat r
                                 left join users u on r.acceptUserId = u.id
        where r.userId = #{currentUserId} and r.isDelete = 0
    </select>
</mapper>
