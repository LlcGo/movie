spring:
  application:
    name: api
  # DataSource Config
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://47.113.223.242:3306/videodb?tinyInt1isBit=false&useSSL=false&serverTimezone=Asia/Shanghai&characterEncoding=utf-8
    username: root
    password: mysqlpassWord@666.
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5                                       # 初始化大小
      min-idle: 15                                         # 最小连接数
      max-active: 20                                        # 最大连接数
      max-wait: 60000                                       # 获取连接时的最大等待时间
      min-evictable-idle-time-millis: 300000                # 一个连接在池中最小生存的时间，单位是毫秒
      time-between-eviction-runs-millis: 60000              # 多久才进行一次检测需要关闭的空闲连接，单位是毫秒
      filters: stat                                         # 配置扩展插件：stat-监控统计，log4j-日志，wall-防火墙（防止SQL注入），去掉后，监控界面的sql无法统计   ,wall
      validation-query: SELECT 1                            # 检测连接是否有效的 SQL语句，为空时以下三个配置均无效
      test-on-borrow: true                                  # 申请连接时执行validationQuery检测连接是否有效，默认true，开启后会降低性能
      test-on-return: true                                  # 归还连接时执行validationQuery检测连接是否有效，默认false，开启后会降低性能
      test-while-idle: true                                 # 申请连接时如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效，默认false，建议开启，不影响性能
#      stat-view-servlet:
#        enabled: true                                       # 是否开启 StatViewServlet
#        allow: 127.0.0.1                                    # 访问监控页面 白名单，默认127.0.0.1
#        deny: 192.168.56.1                                  # 访问监控页面 黑名单
#        login-username: admin                               # 访问监控页面 登陆账号
#        login-password: admin                               # 访问监控页面 登陆密码
#      filter:
#        stat:
#          enabled: true                                     # 是否开启 FilterStat，默认true
#          log-slow-sql: true                                # 是否开启 慢SQL 记录，默认false
#          slow-sql-millis: 5000                             # 慢 SQL 的标准，默认 3000，单位：毫秒
#          merge-sql: false                                  # 合并多个连接池的监控数据，默认false


  elasticsearch:
      uris: http://47.99.144.75:9200

  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
    
  jackson:
    #  格式化返回时间 yyyy-MM-dd HH:mm:ss
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  # session 失效时间（分钟）
  session:
    timeout: 86400
    store-type: redis
  # redis 配置
  redis:
    port: 6379
    host: 47.113.223.242
    database: 0
    password: myredispassWord@666.
  servlet:
    multipart:
      max-request-size: -1
      max-file-size: -1
  rabbitmq:
    host: 47.113.223.242
    port: 5672
    username: root
    password: rabbitmqPassWord@666.
server:
  port: 7529
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
#  spring.servlet.multipart.maxFileSize=1MB
#  spring.servlet.multipart.maxRequestSize=1MB
# 文件相关参数
file:
  path: /src/main/resources/static/uploads
  # 20 * 1024 * 1024
  chunk-size: 20971520

rabbit:
   ttl: 900000

llg:
  path:
    upload: D:\www\videoSystem\file
    filePath: http://localhost:7529/videoSystem/file/
minio:
  endpoint: http://47.99.144.75:9000 #Minio服务所在地址
  bucketName: test #存储桶名称
  accessKey: ANuJIbPR6AEOubAVkNUF #访问的key
  secretKey: AwkJkxl0dfph0zl0GLqOd6QWRTmHQcLsTJAsIBKw #访问的秘钥